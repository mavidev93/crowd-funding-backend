/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CrowdFund, CrowdFundInterface } from "../CrowdFund";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CrowdFund__CampaignDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__CampaignIsClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__CantWithdrawGoalNotReached",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__GoalAmountMustBeMoreThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__NoContributions",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__NotEnoughContributionAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__OnlyCampaignOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__PeriodDaysShouldBeBetween1to365",
    type: "error",
  },
  {
    inputs: [],
    name: "CrowdFund__ReclaimConditionsDoesNotMet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "campaignOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Fund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "testId",
        type: "uint256",
      },
    ],
    name: "Test",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "closeCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fundingPeriodInDays",
        type: "uint256",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "fundCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCampaigns",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "campaignOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "campaignUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "campaignHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "goalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAmountFunded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "goalAchieved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCampaignOpen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isExists",
            type: "bool",
          },
        ],
        internalType: "struct CrowdFund.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "getCampaignByHash",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "campaignOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "campaignUrl",
            type: "string",
          },
          {
            internalType: "string",
            name: "campaignHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "goalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAmountFunded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "goalAchieved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCampaignOpen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isExists",
            type: "bool",
          },
        ],
        internalType: "struct CrowdFund.Campaign",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaignCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "getContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getHashById",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "hashToCampaign",
    outputs: [
      {
        internalType: "address payable",
        name: "campaignOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "campaignUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "campaignHash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmountFunded",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "goalAchieved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isCampaignOpen",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isExists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061253b806100606000396000f3fe6080604052600436106100dd5760003560e01c806386cdf6041161007f578063c3a0f11211610059578063c3a0f112146102b1578063cf8e4eef146102ee578063d02ed85114610334578063f8a8fd6d1461035d576100dd565b806386cdf6041461021e5780638da5cb5b146102495780638fb5548f14610274576100dd565b8063364c234f116100bb578063364c234f146101505780634e8b87fe1461018d578063606db617146101b65780636caa9218146101f3576100dd565b806303b86b5a146100e257806303d3cd941461010b5780633020580b14610127575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611c00565b610374565b005b61012560048036038101906101209190611c00565b61058d565b005b34801561013357600080fd5b5061014e60048036038101906101499190611c7f565b610911565b005b34801561015c57600080fd5b5061017760048036038101906101729190611c00565b610aef565b6040516101849190611cfd565b60405180910390f35b34801561019957600080fd5b506101b460048036038101906101af9190611c00565b610bbb565b005b3480156101c257600080fd5b506101dd60048036038101906101d89190611d18565b610e63565b6040516101ea9190611dcd565b60405180910390f35b3480156101ff57600080fd5b50610208610f08565b6040516102159190611cfd565b60405180910390f35b34801561022a57600080fd5b50610233610f19565b6040516102409190612047565b60405180910390f35b34801561025557600080fd5b5061025e6111fb565b60405161026b9190612078565b60405180910390f35b34801561028057600080fd5b5061029b60048036038101906102969190611d18565b61121f565b6040516102a89190611dcd565b60405180910390f35b3480156102bd57600080fd5b506102d860048036038101906102d39190611c00565b6112bf565b6040516102e59190612174565b60405180910390f35b3480156102fa57600080fd5b5061031560048036038101906103109190611c00565b6114eb565b60405161032b9a999897969594939291906121a5565b60405180910390f35b34801561034057600080fd5b5061035b60048036038101906103569190611c00565b6116ac565b005b34801561036957600080fd5b50610372611791565b005b80600381604051610385919061228b565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041b576040517f86130b0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160038160405161042c919061228b565b908152602001604051809103902060070160029054906101000a900460ff16610481576040517fe28a491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383604051610491919061228b565b908152602001604051809103902060070160009054906101000a900460ff166104e6576040517f8b0b714300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600385604051610510919061228b565b9081526020016040518091039020600501549081150290604051600060405180830381858888f1935050505015801561054d573d6000803e3d6000fd5b506000600384604051610560919061228b565b908152602001604051809103902060070160016101000a81548160ff021916908315150217905550505050565b8060038160405161059e919061228b565b908152602001604051809103902060070160029054906101000a900460ff166105f3576040517fe28a491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fc826117e0565b662386f26fc1000034101561063d576040517f4b6a1b4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038260405161064d919061228b565b908152602001604051809103902060070160019054906101000a900460ff166106a2576040517fbf9b31cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ab82611879565b346004836040516106bc919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461071291906122d1565b600483604051610722919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600383604051610782919061228b565b90815260200160405180910390206005015461079e91906122d1565b6003836040516107ae919061228b565b9081526020016040518091039020600501819055506107cc826117e0565b6003826040516107dc919061228b565b9081526020016040518091039020600101546003836040516107fe919061228b565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2d48ac6acd9c250f93c75e6a8dd61f6f1c062b7f83c1f604cf41a3352df683fc60405160405180910390a4600382604051610899919061228b565b9081526020016040518091039020600401546003836040516108bb919061228b565b9081526020016040518091039020600501541061090d5760016003836040516108e4919061228b565b908152602001604051809103902060070160006101000a81548160ff0219169083151502179055505b5050565b6000821161094b576040517ff795043500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001811115801561095e575061016d8110155b15610995576040517fcbdf561600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61099f6001611947565b60006109ab600161195d565b9050836002600083815260200190815260200160002090805190602001906109d4929190611994565b5060006003856040516109e7919061228b565b90815260200160405180910390209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001018190555084816003019080519060200190610a5b929190611994565b50838160040181905550600081600501819055506201518083610a7e9190612327565b42610a8991906122d1565b816006018190555060008160070160006101000a81548160ff02191690831515021790555060018160070160016101000a81548160ff02191690831515021790555060018160070160026101000a81548160ff0219169083151502179055505050505050565b600081600381604051610b02919061228b565b908152602001604051809103902060070160029054906101000a900460ff16610b57576040517fe28a491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600483604051610b67919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b80600381604051610bcc919061228b565b908152602001604051809103902060070160029054906101000a900460ff16610c21576040517fe28a491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600483604051610c33919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610cb6576040517fecdb278300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cbf82611879565b600382604051610ccf919061228b565b908152602001604051809103902060070160019054906101000a900460ff168015610d255750600382604051610d05919061228b565b908152602001604051809103902060070160009054906101000a900460ff165b15610d5c576040517fea3cd64d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc600484604051610d86919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f19350505050158015610dfd573d6000803e3d6000fd5b506000600483604051610e10919061228b565b908152602001604051809103902060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6060600260008381526020019081526020016000208054610e83906123b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaf906123b0565b8015610efc5780601f10610ed157610100808354040283529160200191610efc565b820191906000526020600020905b815481529060010190602001808311610edf57829003601f168201915b50505050509050919050565b6000610f14600161195d565b905090565b60606000610f27600161195d565b905060008167ffffffffffffffff811115610f4557610f44611ad5565b5b604051908082528060200260200182016040528015610f7e57816020015b610f6b611a1a565b815260200190600190039081610f635790505b50905060005b828110156111f2576000600360026000848152602001908152602001600020604051610fb09190612476565b9081526020016040518091039020905080604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461103d906123b0565b80601f0160208091040260200160405190810160405280929190818152602001828054611069906123b0565b80156110b65780601f1061108b576101008083540402835291602001916110b6565b820191906000526020600020905b81548152906001019060200180831161109957829003601f168201915b505050505081526020016003820180546110cf906123b0565b80601f01602080910402602001604051908101604052809291908181526020018280546110fb906123b0565b80156111485780601f1061111d57610100808354040283529160200191611148565b820191906000526020600020905b81548152906001019060200180831161112b57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900460ff1615151515815250508383815181106111d3576111d261248d565b5b60200260200101819052505080806111ea906124bc565b915050610f84565b50809250505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052806000526040600020600091509050805461123e906123b0565b80601f016020809104026020016040519081016040528092919081815260200182805461126a906123b0565b80156112b75780601f1061128c576101008083540402835291602001916112b7565b820191906000526020600020905b81548152906001019060200180831161129a57829003601f168201915b505050505081565b6112c7611a1a565b6003826040516112d7919061228b565b9081526020016040518091039020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054611361906123b0565b80601f016020809104026020016040519081016040528092919081815260200182805461138d906123b0565b80156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b505050505081526020016003820180546113f3906123b0565b80601f016020809104026020016040519081016040528092919081815260200182805461141f906123b0565b801561146c5780601f106114415761010080835404028352916020019161146c565b820191906000526020600020905b81548152906001019060200180831161144f57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016007820160029054906101000a900460ff1615151515815250509050919050565b6003818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054611550906123b0565b80601f016020809104026020016040519081016040528092919081815260200182805461157c906123b0565b80156115c95780601f1061159e576101008083540402835291602001916115c9565b820191906000526020600020905b8154815290600101906020018083116115ac57829003601f168201915b5050505050908060030180546115de906123b0565b80601f016020809104026020016040519081016040528092919081815260200182805461160a906123b0565b80156116575780601f1061162c57610100808354040283529160200191611657565b820191906000526020600020905b81548152906001019060200180831161163a57829003601f168201915b5050505050908060040154908060050154908060060154908060070160009054906101000a900460ff16908060070160019054906101000a900460ff16908060070160029054906101000a900460ff1690508a565b806003816040516116bd919061228b565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611753576040517f86130b0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600383604051611765919061228b565b908152602001604051809103902060070160016101000a81548160ff0219169083151502179055505050565b61179b600161195d565b3373ffffffffffffffffffffffffffffffffffffffff167f4ba54330f8090ac87ed0a0b470fd9c8a6bbec84bfe94f4fa7776d1dc27da9f9c60405160405180910390a3565b611876816040516024016117f49190611dcd565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061196b565b50565b8060038160405161188a919061228b565b908152602001604051809103902060070160029054906101000a900460ff166118df576040517fe28a491b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003826040516118ef919061228b565b90815260200160405180910390206006015442111561194357600060038360405161191a919061228b565b908152602001604051809103902060070160016101000a81548160ff0219169083151502179055505b5050565b6001816000016000828254019250508190555050565b600081600001549050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546119a0906123b0565b90600052602060002090601f0160209004810192826119c25760008555611a09565b82601f106119db57805160ff1916838001178555611a09565b82800160010185558215611a09579182015b82811115611a085782518255916020019190600101906119ed565b5b509050611a169190611a89565b5090565b604051806101400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581525090565b5b80821115611aa2576000816000905550600101611a8a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b0d82611ac4565b810181811067ffffffffffffffff82111715611b2c57611b2b611ad5565b5b80604052505050565b6000611b3f611aa6565b9050611b4b8282611b04565b919050565b600067ffffffffffffffff821115611b6b57611b6a611ad5565b5b611b7482611ac4565b9050602081019050919050565b82818337600083830152505050565b6000611ba3611b9e84611b50565b611b35565b905082815260208101848484011115611bbf57611bbe611abf565b5b611bca848285611b81565b509392505050565b600082601f830112611be757611be6611aba565b5b8135611bf7848260208601611b90565b91505092915050565b600060208284031215611c1657611c15611ab0565b5b600082013567ffffffffffffffff811115611c3457611c33611ab5565b5b611c4084828501611bd2565b91505092915050565b6000819050919050565b611c5c81611c49565b8114611c6757600080fd5b50565b600081359050611c7981611c53565b92915050565b600080600060608486031215611c9857611c97611ab0565b5b600084013567ffffffffffffffff811115611cb657611cb5611ab5565b5b611cc286828701611bd2565b9350506020611cd386828701611c6a565b9250506040611ce486828701611c6a565b9150509250925092565b611cf781611c49565b82525050565b6000602082019050611d126000830184611cee565b92915050565b600060208284031215611d2e57611d2d611ab0565b5b6000611d3c84828501611c6a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d7f578082015181840152602081019050611d64565b83811115611d8e576000848401525b50505050565b6000611d9f82611d45565b611da98185611d50565b9350611db9818560208601611d61565b611dc281611ac4565b840191505092915050565b60006020820190508181036000830152611de78184611d94565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4682611e1b565b9050919050565b611e5681611e3b565b82525050565b611e6581611c49565b82525050565b600082825260208201905092915050565b6000611e8782611d45565b611e918185611e6b565b9350611ea1818560208601611d61565b611eaa81611ac4565b840191505092915050565b60008115159050919050565b611eca81611eb5565b82525050565b600061014083016000830151611ee96000860182611e4d565b506020830151611efc6020860182611e5c565b5060408301518482036040860152611f148282611e7c565b91505060608301518482036060860152611f2e8282611e7c565b9150506080830151611f436080860182611e5c565b5060a0830151611f5660a0860182611e5c565b5060c0830151611f6960c0860182611e5c565b5060e0830151611f7c60e0860182611ec1565b50610100830151611f91610100860182611ec1565b50610120830151611fa6610120860182611ec1565b508091505092915050565b6000611fbd8383611ed0565b905092915050565b6000602082019050919050565b6000611fdd82611def565b611fe78185611dfa565b935083602082028501611ff985611e0b565b8060005b8581101561203557848403895281516120168582611fb1565b945061202183611fc5565b925060208a01995050600181019050611ffd565b50829750879550505050505092915050565b600060208201905081810360008301526120618184611fd2565b905092915050565b61207281611e3b565b82525050565b600060208201905061208d6000830184612069565b92915050565b6000610140830160008301516120ac6000860182611e4d565b5060208301516120bf6020860182611e5c565b50604083015184820360408601526120d78282611e7c565b915050606083015184820360608601526120f18282611e7c565b91505060808301516121066080860182611e5c565b5060a083015161211960a0860182611e5c565b5060c083015161212c60c0860182611e5c565b5060e083015161213f60e0860182611ec1565b50610100830151612154610100860182611ec1565b50610120830151612169610120860182611ec1565b508091505092915050565b6000602082019050818103600083015261218e8184612093565b905092915050565b61219f81611eb5565b82525050565b6000610140820190506121bb600083018d612069565b6121c8602083018c611cee565b81810360408301526121da818b611d94565b905081810360608301526121ee818a611d94565b90506121fd6080830189611cee565b61220a60a0830188611cee565b61221760c0830187611cee565b61222460e0830186612196565b612232610100830185612196565b612240610120830184612196565b9b9a5050505050505050505050565b600081905092915050565b600061226582611d45565b61226f818561224f565b935061227f818560208601611d61565b80840191505092915050565b6000612297828461225a565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122dc82611c49565b91506122e783611c49565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561231c5761231b6122a2565b5b828201905092915050565b600061233282611c49565b915061233d83611c49565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612376576123756122a2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123c857607f821691505b602082108114156123dc576123db612381565b5b50919050565b60008190508160005260206000209050919050565b60008154612404816123b0565b61240e818661224f565b94506001821660008114612429576001811461243a5761246d565b60ff1983168652818601935061246d565b612443856123e2565b60005b8381101561246557815481890152600182019150602081019050612446565b838801955050505b50505092915050565b600061248282846123f7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006124c782611c49565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124fa576124f96122a2565b5b60018201905091905056fea264697066735822122037bbb6faf11bf08af412fb2dac61550e0cfc13f3ca5058c6b69d103d4c0102a364736f6c63430008080033";

type CrowdFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdFund__factory extends ContractFactory {
  constructor(...args: CrowdFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrowdFund> {
    return super.deploy(overrides || {}) as Promise<CrowdFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrowdFund {
    return super.attach(address) as CrowdFund;
  }
  override connect(signer: Signer): CrowdFund__factory {
    return super.connect(signer) as CrowdFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdFundInterface {
    return new utils.Interface(_abi) as CrowdFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdFund {
    return new Contract(address, _abi, signerOrProvider) as CrowdFund;
  }
}

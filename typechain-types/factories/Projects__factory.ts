/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Projects, ProjectsInterface } from "../Projects";

const _abi = [
  {
    inputs: [],
    name: "Projects__addressHaveProject",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "projectHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
    ],
    name: "addProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_authorIndex",
        type: "uint256",
      },
    ],
    name: "getAuthor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_authorToProject",
    outputs: [
      {
        internalType: "bytes32",
        name: "projectHashId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_projectHashedIdToFunders",
    outputs: [
      {
        internalType: "address",
        name: "funderAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610664806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806314f67f0c14610051578063298ed0c91461008257806345e908ab1461009e5780639e2b8488146100d0575b600080fd5b61006b6004803603810190610066919061045f565b610100565b6040516100799291906104ef565b60405180910390f35b61009c6004803603810190610097919061045f565b610161565b005b6100b860048036038101906100b39190610544565b61035c565b6040516100c793929190610580565b60405180910390f35b6100ea60048036038101906100e591906105b7565b6103a6565b6040516100f791906105e4565b60405180910390f35b6001602052816000526040600020818154811061011c57600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610228576040517fd882489800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000600282815481106103bc576103bb6105ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080fd5b6000819050919050565b610406816103f3565b811461041157600080fd5b50565b600081359050610423816103fd565b92915050565b6000819050919050565b61043c81610429565b811461044757600080fd5b50565b60008135905061045981610433565b92915050565b60008060408385031215610476576104756103ee565b5b600061048485828601610414565b92505060206104958582860161044a565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104ca8261049f565b9050919050565b6104da816104bf565b82525050565b6104e981610429565b82525050565b600060408201905061050460008301856104d1565b61051160208301846104e0565b9392505050565b610521816104bf565b811461052c57600080fd5b50565b60008135905061053e81610518565b92915050565b60006020828403121561055a576105596103ee565b5b60006105688482850161052f565b91505092915050565b61057a816103f3565b82525050565b60006060820190506105956000830186610571565b6105a260208301856104d1565b6105af60408301846104e0565b949350505050565b6000602082840312156105cd576105cc6103ee565b5b60006105db8482850161044a565b91505092915050565b60006020820190506105f960008301846104d1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220be80f35b76d414911d5ab9e3fd8e95101ab956d60448b74717992b3767d0714264736f6c63430008080033";

type ProjectsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Projects__factory extends ContractFactory {
  constructor(...args: ProjectsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Projects> {
    return super.deploy(overrides || {}) as Promise<Projects>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Projects {
    return super.attach(address) as Projects;
  }
  override connect(signer: Signer): Projects__factory {
    return super.connect(signer) as Projects__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectsInterface {
    return new utils.Interface(_abi) as ProjectsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Projects {
    return new Contract(address, _abi, signerOrProvider) as Projects;
  }
}
